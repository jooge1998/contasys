[build]
builder = "nixpacks"

[deploy]
startCommand = "php artisan serve --host=0.0.0.0 --port=$PORT"
healthcheckPath = "/"
healthcheckTimeout = 300
restartPolicyType = "on_failure"

[[build.steps]]
name = "Install PHP dependencies"
command = "composer install --no-dev --optimize-autoloader"

[[build.steps]]
name = "Install Node.js dependencies"
command = "npm ci"

[[build.steps]]
name = "Build assets"
command = "npm run build"

[[build.steps]]
name = "Verify build output"
command = "ls -R public/build"

[[build.steps]]
name = "Generate application key"
command = "php artisan key:generate --force"

[[build.steps]]
name = "Wipe Database"
command = "php artisan db:wipe --force"

[[build.steps]]
name = "Run Migrations"
command = "php artisan migrate --force"

[[build.steps]]
name = "Run Seeders"
command = "php artisan db:seed --force"

[[build.steps]]
name = "Verify Users in DB"
command = "php artisan tinker --execute=\"echo 'Users after seed:'; App\\Models\\User::all(['name', 'email'])->each(function(\$user) { echo ' -> ' . \$user->name . ' (' . \$user->email . ')' . PHP_EOL; });\""

[[build.steps]]
name = "Verify Roles in DB"
command = "php artisan tinker --execute=\"echo 'Roles after seed:'; Spatie\\Permission\\Models\\Role::all(['name'])->each(function(\$role) { echo ' -> ' . \$role->name . PHP_EOL; });\""

[[build.steps]]
name = "Cache configuration"
command = "php artisan config:cache"

[[build.steps]]
name = "Cache routes"
command = "php artisan route:cache"

[[build.steps]]
name = "Cache views"
command = "php artisan view:cache" 